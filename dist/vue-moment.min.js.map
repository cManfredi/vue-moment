{"version":3,"file":"vue-moment.min.js","sources":["../node_modules/moment/moment.js","../vue-moment.js"],"sourcesContent":["//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.23.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","module.exports = {\r\n  install(Vue, options) {\r\n    const moment = options && options.moment ? options.moment : require('moment');\r\n\r\n    Object.defineProperties(Vue.prototype, {\r\n      $moment: {\r\n        get() {\r\n          return moment;\r\n        },\r\n      },\r\n    });\r\n\r\n    Vue.moment = moment;\r\n\r\n    Vue.filter('moment', (...args) => {\r\n      args = Array.prototype.slice.call(args);\r\n      const input = args.shift();\r\n      let date;\r\n\r\n      if (Array.isArray(input) && typeof input[0] === 'string') {\r\n        // If input is array, assume we're being passed a format pattern to parse against.\r\n        // Format pattern will accept an array of potential formats to parse against.\r\n        // Date string should be at [0], format pattern(s) should be at [1]\r\n        date = moment(input[0], input[1], true);\r\n      } else if (typeof input === 'number') {\r\n        if (input.toString().length < 12) {\r\n          // If input is an integer with fewer than 12 digits, assume Unix seconds...\r\n          date = moment.unix(input);\r\n        } else {\r\n          // ..otherwise, assume milliseconds.\r\n          date = moment(input);\r\n        }\r\n      } else {\r\n        // Otherwise, throw the input at moment and see what happens...\r\n        date = moment(input);\r\n      }\r\n\r\n      if (!date.isValid()) {\r\n        // Log a warning if moment couldn't reconcile the input. Better than throwing an error?\r\n        console.warn('Could not build a valid `moment` object from input.');\r\n        return input;\r\n      }\r\n\r\n      function parse(...args) {\r\n        args = Array.prototype.slice.call(args);\r\n        const method = args.shift();\r\n\r\n        switch (method) {\r\n          case 'add': {\r\n            /*\r\n            * Mutates the original moment by adding time.\r\n            * http://momentjs.com/docs/#/manipulating/add/\r\n            */\r\n\r\n            const addends = args.shift()\r\n              .split(',')\r\n              .map(Function.prototype.call, String.prototype.trim);\r\n            const obj = {};\r\n\r\n            for (let n = 0; n < addends.length; n++) {\r\n              const addend = addends[n].split(' ');\r\n              obj[addend[1]] = addend[0];\r\n            }\r\n            date.add(obj);\r\n            break;\r\n          }\r\n\r\n          case 'subtract': {\r\n            /*\r\n            * Mutates the original moment by subtracting time.\r\n            * http://momentjs.com/docs/#/manipulating/subtract/\r\n            */\r\n\r\n            const subtrahends = args.shift()\r\n              .split(',')\r\n              .map(Function.prototype.call, String.prototype.trim);\r\n            const obj = {};\r\n\r\n            for (let n = 0; n < subtrahends.length; n++) {\r\n              const subtrahend = subtrahends[n].split(' ');\r\n              obj[subtrahend[1]] = subtrahend[0];\r\n            }\r\n            date.subtract(obj);\r\n            break;\r\n          }\r\n\r\n          case 'from': {\r\n            /*\r\n            * Display a moment in relative time, either from now or from a specified date.\r\n            * http://momentjs.com/docs/#/displaying/fromnow/\r\n            */\r\n\r\n            let from = 'now';\r\n            let removeSuffix = false;\r\n\r\n            if (args[0] === 'now') args.shift();\r\n            // If valid, assume it is a date we want the output computed against.\r\n            if (moment(args[0]).isValid()) from = moment(args.shift());\r\n\r\n            if (args[0] === true) {\r\n              args.shift();\r\n              removeSuffix = true;\r\n            }\r\n\r\n            if (from !== 'now') {\r\n              date = date.from(from, removeSuffix);\r\n            } else {\r\n              date = date.fromNow(removeSuffix);\r\n            }\r\n            break;\r\n          }\r\n\r\n          case 'diff': {\r\n            /*\r\n            * Mutates the original moment by doing a difference with another date.\r\n            * http://momentjs.com/docs/#/displaying/difference/\r\n            */\r\n\r\n            let referenceTime = moment();\r\n            let units = '';\r\n            let float = false;\r\n\r\n            if (moment(args[0]).isValid()) {\r\n              // If valid, assume it is a date we want the output computed against.\r\n              referenceTime = moment(args.shift());\r\n            } else if (args[0] === null || args[0] === 'now') {\r\n              // If null or 'now', remove argument and proceed with default referenceTime.\r\n              args.shift();\r\n            }\r\n\r\n            if (args[0]) units = args.shift();\r\n\r\n            if (args[0] === true) float = args.shift();\r\n\r\n            date = date.diff(referenceTime, units, float);\r\n            break;\r\n          }\r\n\r\n          case 'calendar': {\r\n            /*\r\n            * Formats a date with different strings depending on how close\r\n            * to a certain date (today by default) the date is.\r\n            * http://momentjs.com/docs/#/displaying/calendar-time/\r\n            */\r\n\r\n            let referenceTime = moment();\r\n            let formats = {};\r\n\r\n            if (moment(args[0]).isValid()) {\r\n              // If valid, assume it is a date we want the output computed against.\r\n              referenceTime = moment(args.shift());\r\n            } else if (args[0] === null || args[0] === 'now') {\r\n              // If null or 'now', remove argument and proceed with default referenceTime.\r\n              args.shift();\r\n            }\r\n\r\n            if (typeof args[0] === 'object') formats = args.shift();\r\n\r\n            date = date.calendar(referenceTime, formats);\r\n            break;\r\n          }\r\n\r\n          case 'utc': {\r\n            /*\r\n            * Mutates the original moment by converting to UTC\r\n            * https://momentjs.com/docs/#/manipulating/utc/\r\n            */\r\n            date.utc();\r\n            break;\r\n          }\r\n\r\n          case 'timezone': {\r\n            /*\r\n            * Mutates the original moment by converting to a new timezone.\r\n            * https://momentjs.com/timezone/docs/#/using-timezones/converting-to-zone/\r\n            */\r\n            date.tz(args.shift());\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            /*\r\n            * Formats a date by taking a string of tokens and replacing\r\n            * them with their corresponding values.\r\n            * http://momentjs.com/docs/#/displaying/format/\r\n            */\r\n\r\n            const format = method;\r\n            date = date.format(format);\r\n          }\r\n        }\r\n\r\n        if (args.length) parse.apply(parse, args);\r\n      }\r\n\r\n      parse.apply(parse, args);\r\n\r\n      return date;\r\n    });\r\n\r\n    Vue.filter('duration', (...args) => {\r\n      /*\r\n      * Basic pass-through filter for leveraging moment.js's ability\r\n      * to manipulate and display durations.\r\n      * https://momentjs.com/docs/#/durations/\r\n      */\r\n      args = Array.prototype.slice.call(args);\r\n      const input = args.shift();\r\n      const method = args.shift();\r\n\r\n      function createDuration(time) {\r\n        if (!Array.isArray(time)) time = [time];\r\n        const result = moment.duration(...time);\r\n        if (!result.isValid()) console.warn('Could not build a valid `duration` object from input.');\r\n        return result;\r\n      }\r\n      let duration = createDuration(input);\r\n\r\n      if (method === 'add' || method === 'subtract') {\r\n        // Generates a duration object and either adds or subtracts it\r\n        // from our original duration.\r\n        const durationChange = createDuration(args);\r\n        duration[method](durationChange);\r\n      } else if (duration && duration[method]) {\r\n        // This gives a full proxy to moment.duration functions.\r\n        duration = duration[method](...args);\r\n      }\r\n\r\n      return duration;\r\n    });\r\n  },\r\n};\r\n"],"names":["global","factory","this","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","length","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","parsedDateParts","isNowValid","isNaN","_d","getTime","overflow","empty","invalidMonth","invalidWeekday","weekdayMismatch","nullInput","invalidFormat","userInvalidated","meridiem","_strict","charsLeftOver","unusedTokens","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","_typeof","key","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","indexOf","getSetYear","makeGetSet","keepTime","get","set$1","month","date","daysInMonth","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","module","exports","_abbr","require","e","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","_nextDay","h","M","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","iso","rfc2822","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","obsOffsets","configFromRFC2822","parsedArray","weekdayStr","parsedInput","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","configFromStringAndFormat","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","unusedInput","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","createFromInputFallback","minute","second","millisecond","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","matches","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","calendar","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","isoWeekday","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","relativeTime","isFuture","_relativeTime","pastFuture","source","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","ss","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","moment","Vue","options","defineProperties","filter","parse","method","addends","String","trim","n","addend","subtrahends","subtrahend","removeSuffix","referenceTime","float","tz","durationChange"],"mappings":"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"}